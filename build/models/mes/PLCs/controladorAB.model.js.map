{"version":3,"file":"controladorAB.model.js","names":["boom","require","Controller","bufToArray","ControladorABMES","infoPLC","ip","slot","nameTagChannelIn","limitInputs","limitMaterials","materials","PLC","connect","then","descriptionPLC","properties","console","log","materialsData","newUpdateMaterial","map","material","id","_idController","name","i","lengthData","newTag","dataValue","readTag","bufferAB","Buffer","from","length","value","writeTag","e","error","module","exports"],"sources":["../../../../src/models/mes/PLCs/controladorAB.model.js"],"sourcesContent":["const boom = require('@hapi/boom');\nconst { Controller } = require('st-ethernet-ip')\nconst bufToArray = require('../../../libs/bufToArray.lib')\n\n\nclass ControladorABMES {\n\n  constructor(infoPLC) {\n\n    this.ip = infoPLC.ip; //IP del controlador\n    this.slot = infoPLC.slot; //Slot del controladorSlot del controlador\n    this.nameTagChannelIn = infoPLC.nameTagChannelIn; //nameTagChannelIn del controladorNombre con el que se definio para el canal de entrada de materiales.\n    this.limitInputs = infoPLC.limitInputs; // Numero de canales de entrada.\n    this.limitMaterials = infoPLC.limitMaterials; // Numero maximo de materiales a crear en el controlador.\n    // this.materials = infoPLC.materials;\n  };\n\n  //TODO : Error con crash de la API si la variable del PLC no existe. (Corregir)\n  //! Error potencial si la variable del PLC no existe. (Corregir)\n\n  setValuesToPLC(materials) {\n    const PLC = new Controller();\n    PLC.connect(this.ip, this.slot).then(async () => {\n      const descriptionPLC = PLC.properties\n      console.log({ descriptionPLC });\n\n      const nameTagChannelIn = this.nameTagChannelIn; //nameTagChannelIn del controladorNombre con el que se definio para el canal de entrada de materiales.\n      const limitInputs = this.limitInputs; // Numero de canales de entrada.\n      const limitMaterials = this.limitMaterials; // Numero maximo de materiales a crear en el controlador.\n      const materialsData = materials;\n\n      const newUpdateMaterial = materialsData.map(\n        async function (material) {\n          const id = material._idController\n          const name = material.name\n\n          for (let i = 0; i <= limitInputs; i++) {\n            const lengthData = PLC.newTag(`${nameTagChannelIn}[${i}].MATERIAL[${id}].LEN`)\n            const dataValue = PLC.newTag(`${nameTagChannelIn}[${i}].MATERIAL[${id}].DATA`, null, false, 1, 15)\n\n            await PLC.readTag(lengthData);\n            await PLC.readTag(dataValue);\n\n\n            const bufferAB = bufToArray(Buffer.from(name))\n            const length = bufferAB.length\n\n            dataValue.value = bufferAB\n            lengthData.value = length\n\n\n            await PLC.writeTag(lengthData)\n            await PLC.writeTag(dataValue)\n\n          }\n        })\n      console.log(`Valores Actualizados en PLC con exito.`);\n      return descriptionPLC\n    }).catch(async e => {\n      console.error(e);\n    });\n  }\n}\n\n\n\nmodule.exports = { ControladorABMES };\n"],"mappings":";;;;+CACA,oJ;;;;;;;;;;;;AADA,IAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,eAAuBA,OAAO,CAAC,gBAAD,CAA9B;AAAA,IAAQC,UAAR,YAAQA,UAAR;;AACA,IAAMC,UAAU,GAAGF,OAAO,CAAC,8BAAD,CAA1B;;IAGMG,gB;EAEJ,0BAAYC,OAAZ,EAAqB;IAAA;;IAEnB,KAAKC,EAAL,GAAUD,OAAO,CAACC,EAAlB,CAFmB,CAEG;;IACtB,KAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB,CAHmB,CAGO;;IAC1B,KAAKC,gBAAL,GAAwBH,OAAO,CAACG,gBAAhC,CAJmB,CAI+B;;IAClD,KAAKC,WAAL,GAAmBJ,OAAO,CAACI,WAA3B,CALmB,CAKqB;;IACxC,KAAKC,cAAL,GAAsBL,OAAO,CAACK,cAA9B,CANmB,CAM2B;IAC9C;EACD;;;;WAED;IACA;IAEA,wBAAeC,SAAf,EAA0B;MAAA;;MACxB,IAAMC,GAAG,GAAG,IAAIV,UAAJ,EAAZ;MACAU,GAAG,CAACC,OAAJ,CAAY,KAAKP,EAAjB,EAAqB,KAAKC,IAA1B,EAAgCO,IAAhC,0EAAqC;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC7BC,cAD6B,GACZH,GAAG,CAACI,UADQ;gBAEnCC,OAAO,CAACC,GAAR,CAAY;kBAAEH,cAAc,EAAdA;gBAAF,CAAZ;gBAEMP,gBAJ6B,GAIV,KAAI,CAACA,gBAJK,EAIa;;gBAC1CC,WAL6B,GAKf,KAAI,CAACA,WALU,EAKG;;gBAChCC,cAN6B,GAMZ,KAAI,CAACA,cANO,EAMS;;gBACtCS,aAP6B,GAObR,SAPa;gBAS7BS,iBAT6B,GASTD,aAAa,CAACE,GAAd;kBAAA,uEACxB,iBAAgBC,QAAhB;oBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BACQC,EADR,GACaD,QAAQ,CAACE,aADtB;4BAEQC,IAFR,GAEeH,QAAQ,CAACG,IAFxB;4BAIWC,CAJX,GAIe,CAJf;;0BAAA;4BAAA,MAIkBA,CAAC,IAAIjB,WAJvB;8BAAA;8BAAA;4BAAA;;4BAKUkB,UALV,GAKuBf,GAAG,CAACgB,MAAJ,WAAcpB,gBAAd,cAAkCkB,CAAlC,wBAAiDH,EAAjD,WALvB;4BAMUM,SANV,GAMsBjB,GAAG,CAACgB,MAAJ,WAAcpB,gBAAd,cAAkCkB,CAAlC,wBAAiDH,EAAjD,aAA6D,IAA7D,EAAmE,KAAnE,EAA0E,CAA1E,EAA6E,EAA7E,CANtB;4BAAA;4BAAA,OAQUX,GAAG,CAACkB,OAAJ,CAAYH,UAAZ,CARV;;0BAAA;4BAAA;4BAAA,OASUf,GAAG,CAACkB,OAAJ,CAAYD,SAAZ,CATV;;0BAAA;4BAYUE,QAZV,GAYqB5B,UAAU,CAAC6B,MAAM,CAACC,IAAP,CAAYR,IAAZ,CAAD,CAZ/B;4BAaUS,MAbV,GAamBH,QAAQ,CAACG,MAb5B;4BAeIL,SAAS,CAACM,KAAV,GAAkBJ,QAAlB;4BACAJ,UAAU,CAACQ,KAAX,GAAmBD,MAAnB;4BAhBJ;4BAAA,OAmBUtB,GAAG,CAACwB,QAAJ,CAAaT,UAAb,CAnBV;;0BAAA;4BAAA;4BAAA,OAoBUf,GAAG,CAACwB,QAAJ,CAAaP,SAAb,CApBV;;0BAAA;4BAIoCH,CAAC,EAJrC;4BAAA;4BAAA;;0BAAA;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA,CADwB;;kBAAA;oBAAA;kBAAA;gBAAA,IATS;gBAkCnCT,OAAO,CAACC,GAAR;gBAlCmC,kCAmC5BH,cAnC4B;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAArC;QAAA,uEAoCS,kBAAMsB,CAAN;UAAA;YAAA;cAAA;gBAAA;kBACPpB,OAAO,CAACqB,KAAR,CAAcD,CAAd;;gBADO;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CApCT;;QAAA;UAAA;QAAA;MAAA;IAuCD;;;;;;AAKHE,MAAM,CAACC,OAAP,GAAiB;EAAEpC,gBAAgB,EAAhBA;AAAF,CAAjB"}