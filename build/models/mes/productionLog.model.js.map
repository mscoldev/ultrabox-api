{"version":3,"file":"productionLog.model.js","names":["require","Schema","model","moment","productionLogSchema","codigo","type","Number","required","unidad","String","cantidad","estado","Boolean","molino","_idProductionLine","ref","Types","ObjectId","receta","silo","kwhpd004","kwhpd005","kwhpd006","m3gas","m3ton","timestamps","versionKey","methods","toJSON","productionLog","toObject","createdAt","format","updatedAt","module","exports"],"sources":["../../../src/models/mes/productionLog.model.js"],"sourcesContent":["const { Schema, model } = require(\"mongoose\")\nconst moment = require('moment');\n\nrequire('../../libs/round.lib')\n\nconst productionLogSchema = Schema({\n  codigo: {\n    type: Number,\n    required: [true, 'El codigo es requerido']\n  },\n  unidad: {\n    type: String,\n    required: [true, 'La unidad de medida es requerida']\n  },\n  cantidad: {\n    type: Number,\n    required: [true, 'Las cantidades son requeridas para el registro']\n  },\n  estado: {\n    type: Boolean,\n    default: false\n  },\n  molino: {\n    type: String,\n    required: [true, 'Debe indicar el punto de produccion molino']\n  },\n  _idProductionLine: {\n    ref: 'ProductionLine',\n    type: Schema.Types.ObjectId\n  },\n  receta: {\n    type: Number,\n    required: [true, 'Debe definir una receta para el registro de produccion']\n  },\n  silo: {\n    type: Number,\n    required: [true, 'Debe seleccionar un lugar de destino para la produccion']\n  },\n  kwhpd004: {\n    type: Number,\n    required: [false],\n    default: 0\n  },\n  kwhpd005: {\n    type: Number,\n    required: [false],\n    default: 0\n  },\n  kwhpd006: {\n    type: Number,\n    required: [false],\n    default: 0\n  },\n  m3gas: {\n    type: Number,\n    required: [false],\n    default: 0\n  },\n  m3ton: {\n    type: Number,\n    required: [false],\n    default: 0\n  }\n}, {\n  timestamps: true,\n  versionKey: false\n})\n\n\n\nproductionLogSchema.methods.toJSON = function () {\n  const productionLog = this.toObject();\n  productionLog.createdAt = moment(productionLog.createdAt).format('DD-MM-YYYY HH:mm');\n  productionLog.updatedAt = moment(productionLog.updatedAt).format('DD-MM-YYYY HH:mm');\n  // productionLog.kwTot = this.kwhpd004 + this.kwhpd005 + this.kwhpd006;\n  // productionLog.kwTon = Math.floor10(productionLog.kwTot / this.cantidad, -3);\n\n  return productionLog\n}\n\nmodule.exports = model('productionLog', productionLogSchema);"],"mappings":";;AAAA,eAA0BA,OAAO,CAAC,UAAD,CAAjC;AAAA,IAAQC,MAAR,YAAQA,MAAR;AAAA,IAAgBC,KAAhB,YAAgBA,KAAhB;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEAA,OAAO,CAAC,sBAAD,CAAP;;AAEA,IAAMI,mBAAmB,GAAGH,MAAM,CAAC;EACjCI,MAAM,EAAE;IACNC,IAAI,EAAEC,MADA;IAENC,QAAQ,EAAE,CAAC,IAAD,EAAO,wBAAP;EAFJ,CADyB;EAKjCC,MAAM,EAAE;IACNH,IAAI,EAAEI,MADA;IAENF,QAAQ,EAAE,CAAC,IAAD,EAAO,kCAAP;EAFJ,CALyB;EASjCG,QAAQ,EAAE;IACRL,IAAI,EAAEC,MADE;IAERC,QAAQ,EAAE,CAAC,IAAD,EAAO,gDAAP;EAFF,CATuB;EAajCI,MAAM,EAAE;IACNN,IAAI,EAAEO,OADA;IAEN,WAAS;EAFH,CAbyB;EAiBjCC,MAAM,EAAE;IACNR,IAAI,EAAEI,MADA;IAENF,QAAQ,EAAE,CAAC,IAAD,EAAO,4CAAP;EAFJ,CAjByB;EAqBjCO,iBAAiB,EAAE;IACjBC,GAAG,EAAE,gBADY;IAEjBV,IAAI,EAAEL,MAAM,CAACgB,KAAP,CAAaC;EAFF,CArBc;EAyBjCC,MAAM,EAAE;IACNb,IAAI,EAAEC,MADA;IAENC,QAAQ,EAAE,CAAC,IAAD,EAAO,wDAAP;EAFJ,CAzByB;EA6BjCY,IAAI,EAAE;IACJd,IAAI,EAAEC,MADF;IAEJC,QAAQ,EAAE,CAAC,IAAD,EAAO,yDAAP;EAFN,CA7B2B;EAiCjCa,QAAQ,EAAE;IACRf,IAAI,EAAEC,MADE;IAERC,QAAQ,EAAE,CAAC,KAAD,CAFF;IAGR,WAAS;EAHD,CAjCuB;EAsCjCc,QAAQ,EAAE;IACRhB,IAAI,EAAEC,MADE;IAERC,QAAQ,EAAE,CAAC,KAAD,CAFF;IAGR,WAAS;EAHD,CAtCuB;EA2CjCe,QAAQ,EAAE;IACRjB,IAAI,EAAEC,MADE;IAERC,QAAQ,EAAE,CAAC,KAAD,CAFF;IAGR,WAAS;EAHD,CA3CuB;EAgDjCgB,KAAK,EAAE;IACLlB,IAAI,EAAEC,MADD;IAELC,QAAQ,EAAE,CAAC,KAAD,CAFL;IAGL,WAAS;EAHJ,CAhD0B;EAqDjCiB,KAAK,EAAE;IACLnB,IAAI,EAAEC,MADD;IAELC,QAAQ,EAAE,CAAC,KAAD,CAFL;IAGL,WAAS;EAHJ;AArD0B,CAAD,EA0D/B;EACDkB,UAAU,EAAE,IADX;EAEDC,UAAU,EAAE;AAFX,CA1D+B,CAAlC;;AAiEAvB,mBAAmB,CAACwB,OAApB,CAA4BC,MAA5B,GAAqC,YAAY;EAC/C,IAAMC,aAAa,GAAG,KAAKC,QAAL,EAAtB;EACAD,aAAa,CAACE,SAAd,GAA0B7B,MAAM,CAAC2B,aAAa,CAACE,SAAf,CAAN,CAAgCC,MAAhC,CAAuC,kBAAvC,CAA1B;EACAH,aAAa,CAACI,SAAd,GAA0B/B,MAAM,CAAC2B,aAAa,CAACI,SAAf,CAAN,CAAgCD,MAAhC,CAAuC,kBAAvC,CAA1B,CAH+C,CAI/C;EACA;;EAEA,OAAOH,aAAP;AACD,CARD;;AAUAK,MAAM,CAACC,OAAP,GAAiBlC,KAAK,CAAC,eAAD,EAAkBE,mBAAlB,CAAtB"}