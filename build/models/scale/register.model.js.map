{"version":3,"file":"register.model.js","names":["require","DataTypes","moment","sequelize","Truck","Product","Driver","Client","Origin","Site","register","define","id","type","UUID","primaryKey","allowNull","defaultValue","UUIDV4","date","DATE","get","hdate","dataValues","format","required","NOW","serialScale","STRING","unique","serialLog","INTEGER","qty","DECIMAL","validate","isDecimal","msg","groosWeight","netWeight","set","tareNow","tare","newNetWeight","setDataValue","status","operation","dateTara","isDate","args","dateNet","weight","dateWeight","dateNow","Date","toISOString","weightNow","secondWeight","secondDateWeight","secondDateWeightNow","error","userRecorder","_idProduct","isInt","notEmpty","_idDriver","isUUID","_idTruck","_idClient","_idOrigin","_idSite","enabled","BOOLEAN","hasMany","foreignKey","sourceKey","belongsTo","targetId","module","exports"],"sources":["../../../src/models/scale/register.model.js"],"sourcesContent":["const { DataTypes } = require('sequelize');\nconst moment = require('moment');\n\nconst { sequelize } = require('../../database/config.databasepg');\n\n\nconst Truck = require('../../models/scale/truck.model');\nconst Product = require('../../models/scale/product.model');\nconst Driver = require('../../models/scale/driver.model');\nconst Client = require('../../models/scale/client.model');\nconst Origin = require('../../models/scale/origin.model');\nconst Site = require('../../models/scale/site.model');\n\n\nconst register = sequelize.define('registers', {\n    id: {\n        type: DataTypes.UUID,\n        primaryKey: true,\n        allowNull: false,\n        defaultValue: DataTypes.UUIDV4\n    },\n    date: {\n        type: DataTypes.DATE,\n        get() {\n            const hdate = moment(this.dataValues.date).format('DD-MM-YYYY HH:mm');\n            return hdate\n        },\n        required: true,\n        defaultValue: DataTypes.NOW\n    },\n    serialScale: {\n        type: DataTypes.STRING,\n        unique: false,\n        required: false,\n        allowNull: true\n    },\n    serialLog: {\n        type: DataTypes.INTEGER,\n        unique: true,\n        required: true,\n        allowNull: false,\n    },\n    qty: {\n        type: DataTypes.DECIMAL(10, 3),\n        allowNull: true,\n        validate: {\n            isDecimal: { msg: 'No es un numero decimal' }\n        },\n        defaultValue: 0,\n    },\n    groosWeight: {\n        type: DataTypes.DECIMAL(10, 3),\n        defaultValue: 0,\n        required: true,\n        allowNull: false,\n        validate: {\n            isDecimal: { msg: 'No es un numero decimal' }\n        }\n    },\n    netWeight: {\n        type: DataTypes.DECIMAL(10, 3),\n        defaultValue: 0,\n        allowNull: false,\n        set() {\n            const tareNow = this.tare;\n            const groosWeight = this.groosWeight;\n\n            if (tareNow != 0 & groosWeight != 0) {\n                const newNetWeight = groosWeight - tareNow;\n                this.setDataValue('netWeight', newNetWeight);\n            }\n        },\n        required: false\n\n    },\n    tare: {\n        type: DataTypes.DECIMAL(10, 3),\n        required: true,\n        defaultValue: 0,\n        allowNull: false,\n        validate: {\n            isDecimal: { msg: 'No es un numero decimal' }\n        }\n    },\n    status: {\n        type: DataTypes.STRING,\n        required: true\n    },\n    operation: {\n        type: DataTypes.STRING,\n        required: true\n    },\n    dateTara: {\n        type: DataTypes.DATE,\n        required: false,\n        validate: {\n            isDate: {\n                args: true,\n                msg: 'El campo dateTara debe ser una fecha válida'\n            }\n        },\n        get() {\n            const hdate = moment(this.dataValues.dateTara).format('DD-MM-YYYY HH:mm');\n            return hdate\n        },\n    },\n    dateNet: {\n        type: DataTypes.DATE,\n        validate: {\n            isDate: {\n                args: true,\n                msg: 'El campo dateNet debe ser una fecha válida'\n            }\n        },\n        get() {\n            const hdate = moment(this.dataValues.dateNet).format('DD-MM-YYYY HH:mm');\n            return hdate\n        },\n    },\n    weight: {\n        type: DataTypes.DECIMAL(10, 3),\n        defaultValue: 0,\n        required: true,\n        allowNull: false,\n        validate: {\n            isDecimal: { msg: 'No es un numero decimal' }\n        }\n    },\n    dateWeight: {\n        type: DataTypes.DATE,\n        set() {\n            const dateNow = new Date().toISOString();\n            const weightNow = this.weight\n            if (weightNow != 0) {\n                this.setDataValue('dateWeight', dateNow)\n            }\n        },\n        required: false,\n\n    },\n    secondWeight: {\n        type: DataTypes.DECIMAL(10, 3),\n        defaultValue: 0,\n        required: true,\n        allowNull: false,\n        validate: {\n            isDecimal: { msg: 'No es un numero decimal' }\n        }\n    },\n    secondDateWeight: {\n        type: DataTypes.DATE,\n        set() {\n            const dateNow = new Date().toISOString();\n            const secondDateWeightNow = this.secondDateWeight\n            if (secondDateWeightNow != 0) {\n                this.setDataValue('secondDateWeight', dateNow)\n            }\n        },\n        required: false\n    },\n    error: {\n        type: DataTypes.STRING,\n        required: true,\n        defaultValue: 'Sin error'\n    },\n    userRecorder: {\n        type: DataTypes.STRING,\n        required: true,\n    },\n    _idProduct: {\n        type: DataTypes.INTEGER,\n        required: true,\n        allowNull: false,\n        validate: {\n            isInt: { msg: 'El _idProduct debe ser Int' },\n            notEmpty: {\n                msg: 'El producto no puede estar vacio'\n            }\n        }\n    },\n    _idDriver: {\n        type: DataTypes.UUID,\n        required: true,\n        allowNull: false,\n        validate: {\n            isUUID: {\n                args: 4,\n                msg: 'El _idDriver debe ser UUID'\n            },\n            notEmpty: {\n                msg: 'El conductor no puede estar vacio'\n            }\n        }\n    },\n    _idTruck: {\n        type: DataTypes.UUID,\n        required: true,\n        allowNull: false,\n        validate: {\n            isUUID: {\n                args: 4,\n                msg: 'El _idTruck debe ser UUID'\n            },\n            notEmpty: {\n                msg: 'El vehiculo no puede estar vacio'\n            }\n        }\n    },\n    _idClient: {\n        type: DataTypes.UUID,\n        required: true,\n        allowNull: false,\n        validate: {\n            isUUID: {\n                args: 4,\n                msg: 'El _idClient debe ser UUID'\n            },\n            notEmpty: {\n                msg: 'El cliente no puede estar vacio'\n            }\n        }\n    },\n    _idOrigin: {\n        type: DataTypes.INTEGER,\n        required: true,\n        allowNull: false,\n        validate: {\n            isInt: { msg: 'El _idOrigin debe ser Int' },\n            notEmpty: {\n                msg: 'El origen no puede estar vacio'\n            }\n        }\n    },\n    _idSite: {\n        type: DataTypes.INTEGER,\n        required: true,\n        allowNull: false,\n        validate: {\n            isInt: { msg: 'El _idSite debe ser Int' },\n            notEmpty: {\n                msg: 'El destino no puede estar vacio'\n            }\n        }\n    },\n    enabled: {\n        type: DataTypes.BOOLEAN,\n        required: true,\n        defaultValue: true\n    }\n})\n\n\n\n\n//*Trucks - registers\nTruck.hasMany(register, {\n    foreignKey: '_idTruck',\n    sourceKey: 'id'\n});\nregister.belongsTo(Truck, {\n    foreignKey: '_idTruck',\n    targetId: 'id'\n})\n\n//*Products - registers\nProduct.hasMany(register, {\n    foreignKey: '_idProduct',\n    sourceKey: 'id'\n});\nregister.belongsTo(Product, {\n    foreignKey: '_idProduct',\n    targetId: 'id'\n})\n\n//*Driverss - registers\nDriver.hasMany(register, {\n    foreignKey: '_idDriver',\n    sourceKey: 'id'\n});\nregister.belongsTo(Driver, {\n    foreignKey: '_idDriver',\n    targetId: 'id'\n});\n\n//*Client- registers\nClient.hasMany(register, {\n    foreignKey: '_idClient',\n    sourceKey: 'id'\n});\nregister.belongsTo(Client, {\n    foreignKey: '_idClient',\n    targetId: 'id'\n});\n\n//*Origin- registers\nOrigin.hasMany(register, {\n    foreignKey: '_idOrigin',\n    sourceKey: 'id'\n});\nregister.belongsTo(Origin, {\n    foreignKey: '_idOrigin',\n    targetId: 'id'\n});\n\n//*Origin- registers\nSite.hasMany(register, {\n    foreignKey: '_idSite',\n    sourceKey: 'id'\n});\nregister.belongsTo(Site, {\n    foreignKey: '_idSite',\n    targetId: 'id'\n});\n\nmodule.exports = register;"],"mappings":"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"}