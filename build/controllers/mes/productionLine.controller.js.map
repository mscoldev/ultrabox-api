{"version":3,"file":"productionLine.controller.js","names":["require","response","request","boom","ProductionLine","getProductionLines","req","res","next","find","productionLines","status","json","msg","message","getNameProdLinesByIdController","idc","params","findOne","productionLine","createProductionLine","body","$or","erp_code","name","validatorUniqueErpCode","console","log","save","productionLineSaved","badRequest","getProductionLineById","findById","_id","updateProductionLineById","findByIdAndUpdate","updatedProductionLine","deleteProductionLineById","paramsId","deleted","deletedProductionLine","module","exports"],"sources":["../../../src/controllers/mes/productionLine.controller.js"],"sourcesContent":["const { response, request } = require(\"express\");\nconst boom = require('@hapi/boom');\nconst ProductionLine = require(\"../../models/productionLine.model\");\n\n\nconst getProductionLines = async (req = request, res = response, next) => {\n  try {\n    const productionLines = await ProductionLine.find();\n    res.status(200).json({\n      msg: 'Lineas de producción',\n      productionLines\n    })\n  } catch (err) {\n    return res.status(500).json({ message: err.message });\n  }\n}\n\nconst getNameProdLinesByIdController = async (req = request, res = response, next) => {\n  const { idc } = req.params\n  try {\n    const productionLine = await ProductionLine.findOne({ 'id_controller': idc })\n    res.status(200).json({\n      msg: 'Informacion de linea de produccion',\n      productionLine\n    })\n  } catch (err) {\n    return res.status(500).json({ message: err.message });\n  }\n}\n\n\nconst createProductionLine = async (req = request, res = response, next) => {\n  try {\n    const body = req.body;\n\n    const validatorUniqueErpCode = await ProductionLine.findOne({\n      $or: [\n        { erp_code: body.erp_code },\n        { name: body.name }\n      ]\n    })\n\n    console.log({ validatorUniqueErpCode });\n\n    if (!validatorUniqueErpCode) {\n      const productionLine = new ProductionLine(body);\n      const productionLineSaved = await productionLine.save();\n      res.status(201).json({\n        message: 'Linea de producción creada',\n        productionLineSaved\n      })\n    } else {\n      throw boom.badRequest('Oops!, verifique el Request.Existe por lo menos un registro con name, erp_code o id_controlador registrado. Estos atributos deben ser únicos')\n    }\n\n  } catch (err) {\n    next(err);\n  }\n\n}\n\n\nconst getProductionLineById = async (req = request, res = response, next) => {\n  try {\n    const productionLine = await ProductionLine.findById(req.params._id);\n    if (productionLine != null) {\n      res.status(200).json({\n        msg: 'Linea de producción por Id',\n        productionLine\n      });\n    } else {\n      res.status(404).json({\n        msg: 'Linea de produccion no encontrada'\n      })\n    }\n  } catch (error) {\n    res.status(500).json({ message: error.message });\n  }\n\n}\n\nconst updateProductionLineById = async (req = request, res = response, next) => {\n  try {\n    const _id = req.params._id;\n    const body = req.body;\n    const updatedProductionLine = await ProductionLine.findByIdAndUpdate(_id, body, { new: true });\n    if (updatedProductionLine != null) {\n      res.status(200).json({\n        message: 'Linea de producción actualizada por Id',\n        updatedProductionLine\n      });\n    } else {\n\n      throw boom.badRequest('Oops!, _id no encontrado. Verifica el registro que deseas actualizar.')\n    }\n  } catch (err) {\n    next(err);\n  }\n\n}\n\nconst deleteProductionLineById = async (req = request, res = response, next) => {\n  try {\n    const paramsId = req.params._id;\n    const body = { deleted: true }\n    const deletedProductionLine = await ProductionLine.findByIdAndUpdate(paramsId, body);\n    if (deletedProductionLine != null) {\n      res.status(202).json({\n        msg: 'Linea de produccion eliminada Id:' + paramsId\n      });\n    } else {\n      res.status(404).json({\n        msg: 'Linea de produccion no encontrada, verifique los datos'\n      })\n    }\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n}\n\nmodule.exports = {\n  getProductionLines,\n  createProductionLine,\n  getProductionLineById,\n  updateProductionLineById,\n  deleteProductionLineById,\n  getNameProdLinesByIdController\n}"],"mappings":"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"}