{"version":3,"file":"typesDocument.controller.js","names":["require","response","request","TypesDocument","getTypesDocuments","req","res","find","typesDocuments","status","json","msg","message","getTypesDocumentById","paramsId","params","_id","findById","typesDocument","updateTypesDocumentById","body","findByIdAndUpdate","updatedTypeDocument","deleteTypesDocumentById","deleted","deletedTypesDocument","createTypesDocument","name","save","typesDocumentSaved","module","exports"],"sources":["../../../src/controllers/mes/typesDocument.controller.js"],"sourcesContent":["const { response, request } = require('express');\nconst TypesDocument = require(\"../../models/typesDocument.model\");\n\n\nconst getTypesDocuments = async (req = request, res = response) => {\n    try {\n        const typesDocuments = await TypesDocument.find({ \"deleted\": false });\n        res.status(200).json({\n            msg: 'List of TypesDocuments',\n            typesDocuments\n        })\n    } catch (err) {\n        return res.status(500).json({ message: err.message });\n    }\n}\n\nconst getTypesDocumentById = async (req = request, res = response) => {\n    const paramsId = req.params._id;\n    const typesDocument = await TypesDocument.findById(paramsId);\n    if (typesDocument != null) {\n        res.status(200).json({\n            msg: 'TypesDocument por Id',\n            typesDocument\n        });\n    } else {\n        res.status(404).json({\n            msg: 'Tipo de documento no encontrado'\n        })\n    }\n}\n\nconst updateTypesDocumentById = async (req = request, res = response) => {\n    try {\n        const paramsId = req.params._id;\n        const body = req.body;\n        const updatedTypeDocument = await TypesDocument.findByIdAndUpdate(paramsId, body, { new: true });\n        if (updatedTypeDocument != null) {\n            res.status(200).json({\n                msg: 'Tipo de documentio actualizado por Id',\n                updatedTypeDocument\n            });\n        } else {\n            res.status(404).json({\n                msg: 'TypesDocument no encontrado, verifique el Id ingresado'\n            })\n        }\n    } catch (err) {\n        return res.status(500).json({\n            message: err.message\n        })\n    }\n}\n\nconst deleteTypesDocumentById = async (req = request, res = response) => {\n    try {\n        const paramsId = req.params._id;\n        const body = { deleted: true }\n        const deletedTypesDocument = await TypesDocument.findByIdAndUpdate(paramsId, body);\n        if (deletedTypesDocument != null) {\n            res.status(202).json({\n                msg: 'TypesDocument eliminado Id:' + paramsId\n            });\n        } else {\n            res.status(404).json({\n                msg: 'TypesDocument no encontrado, verifique el Id ingresado'\n            })\n        }\n    } catch (err) {\n        return res.status(500).json({ message: err.message })\n    }\n}\n\n\n\nconst createTypesDocument = async (req = request, res = response) => {\n    //TODO: Usar desestructuracion de objetos\n    try {\n        const { name } = req.body;\n\n        const typesDocument = new TypesDocument({ name });\n\n        const typesDocumentSaved = await typesDocument.save();\n\n        res.status(201).json({\n            msg: 'TypesDocument created successfully',\n            typesDocumentSaved\n        })\n    } catch (err) {\n        return res.status(500).json({ message: err.message })\n    }\n\n}\n\n\n\nmodule.exports = { createTypesDocument, getTypesDocuments, getTypesDocumentById, updateTypesDocumentById, deleteTypesDocumentById }"],"mappings":"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"}