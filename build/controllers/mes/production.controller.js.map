{"version":3,"file":"production.controller.js","names":["require","response","request","Production","getProductions","req","res","find","productions","status","json","msg","message","createProduction","body","production","save","productionSaved","getProductionById","findById","params","_id","updateProductionById","paramsId","findByIdAndUpdate","updatedProduction","deleteProductionById","deleted","deletedProduction","module","exports"],"sources":["../../../src/controllers/mes/production.controller.js"],"sourcesContent":["const { response, request } = require(\"express\");\nconst Production = require(\"../../models/production.model\");\n\n\nconst getProductions = async (req = request, res = response) => {\n    try {\n        const productions = await Production.find();\n        res.status(200).json({\n            msg: 'Lista de producciones',\n            productions\n        })\n    } catch (err) {\n        return res.status(500).json({ message: err.message });\n    }\n}\n\nconst createProduction = async (req = request, res = response) => {\n    try {\n        const body = req.body;\n        const production = new Production(body);\n\n        const productionSaved = await production.save();\n\n        res.status(201).json({\n            msg: 'Producción Creada',\n            productionSaved\n        })\n    } catch (err) {\n        return res.status(500).json({ message: err.message });\n    }\n\n}\n\n\nconst getProductionById = async (req = request, res = response) => {\n    try {\n        const production = await Production.findById(req.params._id);\n        if (production != null) {\n            res.status(200).json({\n                msg: 'Producción por Id',\n                production\n            });\n        } else {\n            res.status(404).json({\n                msg: 'Producción no encontrada, verifique el Id ingresado'\n            })\n        }\n    } catch (error) {\n        res.status(500).json({ message: error.message });\n    }\n\n}\n\nconst updateProductionById = async (req = request, res = response) => {\n    try {\n        const paramsId = req.params._id;\n        const body = req.body;\n        const updatedProduction = await Production.findByIdAndUpdate(paramsId, body, { new: true });\n        if (updatedProduction != null) {\n            res.status(200).json({\n                msg: 'Producción actualizada segun Id',\n                updatedProduction\n            });\n        } else {\n            res.status(404).json({\n                msg: 'Id de Producción no encontrado'\n            })\n        }\n    }\n    catch (err) {\n        return res.status(500).json({ message: err.message });\n    }\n\n}\n\nconst deleteProductionById = async (req = request, res = response) => {\n    try {\n        const paramsId = req.params._id;\n        const body = { deleted: true }\n        const deletedProduction = await Production.findByIdAndUpdate(paramsId, body);\n        if (deletedProduction != null) {\n            res.status(202).json({\n                msg: 'Material eliminado Id:' + paramsId\n            });\n        } else {\n            res.status(404).json({\n                msg: 'Material no encontrado, verifique el Id ingresado'\n            })\n        }\n    } catch (err) {\n        res.status(500).json({ message: err.message });\n    }\n}\n\nmodule.exports = {\n    getProductions,\n    createProduction,\n    getProductionById,\n    updateProductionById,\n    deleteProductionById\n}"],"mappings":"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"}