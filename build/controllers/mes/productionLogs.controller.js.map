{"version":3,"file":"productionLogs.controller.js","names":["require","response","request","ProductionLog","ProductionLine","Boom","getProductionLogs","req","res","query","sort","limit","console","log","find","createdAt","exec","productionLogs","productionLines","status","json","msg","message","createProductionLog","body","productionLog","save","productionLogSaved","updateFlagProductionLog","next","_id","params","migrate","data","$push","findByIdAndUpdate","badRequest","module","exports"],"sources":["../../../src/controllers/mes/productionLogs.controller.js"],"sourcesContent":["const { response, request } = require('express');\nconst ProductionLog = require('../../models/mes/productionLog.model');\nconst ProductionLine = require('../../models/productionLine.model');\nconst Boom = require('@hapi/boom');\n\nconst getProductionLogs = async (req = request, res = response) => {\n  const { sort, limit } = req.query;\n  console.log(req.query);\n  try {\n    const productionLogs = await ProductionLog.find()\n      .sort({ createdAt: sort })\n      .limit(limit)\n      .exec();\n    const productionLines = await ProductionLine.find();\n    res.status(200).json({\n      msg: 'Registros de produccion',\n      productionLogs,\n      productionLines,\n    });\n  } catch (err) {\n    return res\n      .status(500)\n      .json({ msg: `Opps!, se ha generado un error: ${err.message}` });\n  }\n};\n\nconst createProductionLog = async (req = request, res = response) => {\n  try {\n    const body = req.body;\n    console.log(body);\n    const productionLog = new ProductionLog(body);\n\n    const productionLogSaved = await productionLog.save();\n\n    res.status(201).json({\n      msg: 'Registro de produccion creado',\n      productionLogSaved,\n    });\n  } catch (err) {\n    return res\n      .status(500)\n      .json({ msg: `Opps!, se ha producido un error : ${err.message}` });\n  }\n};\n\nconst updateFlagProductionLog = async (req = request, res = response, next) => {\n  try {\n    const { _id } = req.params;\n    const body = req.body;\n    console.log(body);\n    const { migrate } = body;\n    const data = {\n      $push: {\n        migrate,\n      },\n    };\n\n    const productionLogSaved = await ProductionLog.findByIdAndUpdate(\n      _id,\n      data,\n      { new: true }\n    );\n\n    if (!productionLogSaved) {\n      throw Boom.badRequest(\n        'Oops!, _id no encontrado o tienes un error en la consulta. Verifica el registro que deseas actualizar.'\n      );\n    } else\n      res.status(202).json({\n        msg: 'Bandera actualizada con exito!',\n        productionLogSaved,\n      });\n  } catch (err) {\n    next(err);\n  }\n};\n\nmodule.exports = {\n  getProductionLogs,\n  createProductionLog,\n  updateFlagProductionLog,\n};\n"],"mappings":"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"}