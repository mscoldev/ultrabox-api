{"version":3,"file":"driver.controller.js","names":["require","response","request","Driver","getDrivers","req","res","findAll","where","enabled","drivers","status","json","msg","message","getDriverById","id","params","findByPk","driver","console","log","updateDriverById","body","name","nit","enable","driverUpdated","save","deleteDriverById","deletedDriver","createDriver","typeDocument","create","newDriver","createDriverFromRegister","_idDriver","Error","module","exports"],"sources":["../../../src/controllers/scale/driver.controller.js"],"sourcesContent":["const { response, request } = require('express');\nconst Driver = require('../../models/scale/driver.model');\n\n\nconst getDrivers = async (req = request, res = response) => {\n    try {\n        const drivers = await Driver.findAll({ where: { enabled: true } });\n        res.status(200).json({\n            msg: 'Lista de conductores',\n            drivers\n        })\n    } catch (err) {\n        return res.status(500).json({ message: err.message });\n    }\n}\n\n\nconst getDriverById = async (req = request, res = response) => {\n    try {\n        const { id } = req.params;\n        const driver = await Driver.findByPk(id);\n\n        if (driver != null) {\n            res.status(200).json({\n                msg: 'InformaciÃ³n del conductor',\n                driver\n            });\n        } else {\n            console.log('Not found');\n            res.status(200).json({\n                msg: 'Cliente no encontrado, verifique id'\n            });\n        }\n\n    } catch (err) {\n        return res.status(500).json({ message: `Se ha producido un error, ${err.message}` });\n    }\n}\n\n\nconst updateDriverById = async (req = request, res = response) => {\n    try {\n        const { id } = req.params;\n        const { name, nit, enable } = req.body;\n        const driverUpdated = await Driver.findByPk(id);\n\n        if (driverUpdated != null) {\n            console.log('found');\n            driverUpdated.name = name;\n            driverUpdated.nit = nit;\n            driverUpdated.enable = enable;\n\n            await driverUpdated.save();\n\n            res.status(200).json({\n                msg: 'Conductor actualizado',\n                driverUpdated\n            });\n        } else {\n            console.log('Not found');\n            res.status(200).json({\n                msg: 'Conductor no encontrado, verifique id'\n            });\n        }\n\n    } catch (err) {\n        return res.status(500).json({ message: `Se ha producido un error, ${err.message}` });\n    }\n}\n\nconst deleteDriverById = async (req = request, res = response) => {\n    try {\n        const { id } = req.params;\n        const deletedDriver = await Driver.findByPk(id);\n        if (deletedDriver != null) {\n            deletedDriver.enabled = false;\n\n            await deletedDriver.save();\n\n            res.status(202).json({\n                msg: `El conductor con Id: ${id}, ha sido eliminado`\n            });\n        } else {\n            res.status(404).json({\n                msg: `El conductor con Id: ${id}, no ha sido encontrado verifique el Id nuevamente`\n            })\n        }\n    } catch (err) {\n        return res.status(500).json({ message: err.message })\n    }\n}\n\n\n\nconst createDriver = async (req = request, res = response) => {\n    try {\n        const { name, nit, typeDocument } = req.body\n        const newDriver = await Driver.create({\n            name,\n            nit,\n            typeDocument\n        });\n\n        res.status(201).json({\n            msg: 'Conductor creado satisfactoriamente!',\n            newDriver\n        })\n    } catch (err) {\n        return res.status(500).json({ message: `Se ha producido un error, ${err.message}` })\n    }\n\n}\n\nconst createDriverFromRegister = async (driver) => {\n    try {\n        const { _idDriver, typeDocument, nit, name } = driver\n        const newDriver = await Driver.create({\n            _idDriver,\n            typeDocument,\n            nit,\n            name\n        });\n        return newDriver\n    } catch (err) {\n        throw new Error(`Error al crear el conductor (Driver): ${err}`)\n        // return res.status(500).json({ message: `Se ha producido un error, ${err.message}` })\n    }\n\n}\n\n\nmodule.exports = {\n    getDrivers,\n    getDriverById,\n    updateDriverById,\n    deleteDriverById,\n    createDriver,\n    createDriverFromRegister\n}"],"mappings":"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"}