{"version":3,"file":"client.controller.js","names":["require","response","request","Client","getClients","req","res","findAll","where","enabled","clients","status","json","msg","message","getClientById","id","params","findByPk","client","console","log","updateClientById","body","name","nit","enable","clientUpdated","save","deleteClientById","clientDeleted","createClient","create","newClient","module","exports"],"sources":["../../../src/controllers/scale/client.controller.js"],"sourcesContent":["const { response, request } = require('express');\nconst Client = require('../../models/scale/client.model');\n\n\nconst getClients = async (req = request, res = response) => {\n    try {\n        const clients = await Client.findAll({ where: { enabled: true } });\n        res.status(200).json({\n            msg: 'Lista de clientes',\n            clients\n        })\n    } catch (err) {\n        return res.status(500).json({ message: err.message });\n    }\n}\n\n\nconst getClientById = async (req = request, res = response) => {\n    try {\n        const { id } = req.params;\n        const client = await Client.findByPk(id);\n\n        if (client != null) {\n            res.status(200).json({\n                msg: 'InformaciÃ³n del cliente',\n                client\n            });\n        } else {\n            console.log('Not found');\n            res.status(200).json({\n                msg: 'Cliente no encontrado, verifique id'\n            });\n        }\n\n    } catch (err) {\n        return res.status(500).json({ message: `Se ha producido un error, ${err.message}` });\n    }\n}\n\n\nconst updateClientById = async (req = request, res = response) => {\n    try {\n        const { id } = req.params;\n        const { name, nit, enable } = req.body;\n        const clientUpdated = await Client.findByPk(id);\n\n        if (clientUpdated != null) {\n            console.log('found');\n            clientUpdated.name = name;\n            clientUpdated.nit = nit;\n            clientUpdated.enable = enable;\n\n            await clientUpdated.save();\n\n            res.status(200).json({\n                msg: 'Cliente actualizado',\n                clientUpdated\n            });\n        } else {\n            console.log('Not found');\n            res.status(200).json({\n                msg: 'Cliente no encontrado, verifique id'\n            });\n        }\n\n    } catch (err) {\n        return res.status(500).json({ message: `Se ha producido un error, ${err.message}` });\n    }\n}\n\n\nconst deleteClientById = async (req = request, res = response) => {\n    try {\n        const { id } = req.params;\n        const clientDeleted = await Client.findByPk(id);\n\n        if (clientDeleted != null) {\n            clientDeleted.enabled = false;\n            await clientDeleted.save();\n\n            res.status(202).json({\n                msg: `El cliente con Id: ${id}, ha sido eliminado`\n            });\n        } else {\n            res.status(404).json({\n                msg: 'drivers no encontrado, verifique el Id ingresado'\n            })\n        }\n    } catch (err) {\n        return res.status(500).json({ message: err.message })\n    }\n}\n\n\n\nconst createClient = async (req = request, res = response) => {\n    try {\n        const { name, nit } = req.body\n        const newClient = await Client.create({\n            name,\n            nit,\n        });\n        res.status(201).json({\n            msg: 'Cliente creado satisfactoriamente!',\n            newClient\n        })\n    } catch (err) {\n        return res.status(500).json({ message: `Se ha producido un error, ${err.message}` })\n    }\n\n}\n\n\n\nmodule.exports = {\n    getClients,\n    getClientById,\n    updateClientById,\n    deleteClientById,\n    createClient\n}"],"mappings":"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"}