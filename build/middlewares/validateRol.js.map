{"version":3,"file":"validateRol.js","names":["require","request","response","jsonata","Role","getUserRol","req","res","next","user","status","json","msg","roles","console","log","validateAccessModule","findById","permissions","expression","result","evaluate","error","message","addNameModule","nameModule","module","JSONataExpression","dataPromise","queryJSONata","exports"],"sources":["../../src/middlewares/validateRol.js"],"sourcesContent":["const { request, response } = require('express');\nconst jsonata = require('jsonata');\n\nconst Role = require('../models/role.model');\n\n\nconst getUserRol = async (req = request, res = response, next) => {\n    if (!req.user) {\n        return res.status(500).json({\n            msg: 'Se quiere verificar el rol sin validar el token primero'\n        })\n    }\n\n    const { roles } = req.user;\n\n    console.log(`El id del rol de usuario es: ${roles}`);\n    next();\n}\n\nconst validateAccessModule = async (req = request, res = response, next) => {\n\n    const { roles } = req.user;\n\n    try {\n        const { permissions } = await Role.findById(roles);\n        if (!permissions) {\n            return res.status(404).json({ msg: 'No se encontraron permisos asignados al rol' })\n        }\n\n        console.log(permissions);\n\n        const expression = jsonata('module');\n        const result = expression.evaluate(permissions);\n\n        console.log(result);\n\n        next();\n    } catch (error) {\n        return res.status(500).json({ msg: 'Error interno', error: error.message });\n    }\n\n}\n\nconst addNameModule = (nameModule) => {\n    return (req = request, res = response, next) => {\n        req.module = nameModule\n        console.log(`El nombre de este modulo es: ${nameModule}`);\n        next();\n    }\n}\n\nconst JSONataExpression = async (dataPromise) => {\n    const queryJSONata = 'module';\n    const expression = jsonata(queryJSONata);\n    const result = expression.evaluate(dataPromise);\n    return result;\n}\n\nmodule.exports = {\n    getUserRol,\n    validateAccessModule,\n    addNameModule\n}"],"mappings":"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"}