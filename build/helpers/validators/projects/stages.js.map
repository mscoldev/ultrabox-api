<<<<<<< HEAD
{"version":3,"file":"stages.js","names":["_","require","PjAcceptance","updateDynamicAcceptance","_id","signatory","serviceValue","recommendations","readAcceptanceById","data","console","log","getLastStageName","lastStage","updateStepOne","$set","contractor","$push","stage","name","completed","setAcceptanceById","updatedAcceptance","updateStepTwo","client","typeAcceptance","updateStepThree","result","update","findByIdAndUpdate","updateAcceptance","boom","notFound","findById","acceptance","findSomeStageComplete","someStageName","existingStageComplete","some","stageSome","updateSelectionStage","confirmStage","stages","orderBy","length","$oid","_codeProjectERP","_idProjectERP","dateAcceptance","$date","serviceObject","dateInit","dateEnd","erpRef","purchaseOrder","own","proposal","company","Name","Position","Email","controller","deliverables","description","compliance","accepted","citySign","officeSign","date","_idFiles","dateSign","rejectedMessage","createdAt","updatedAt","module","exports"],"sources":["../../../../src/helpers/validators/projects/stages.js"],"sourcesContent":["const _ = require('lodash');\nconst PjAcceptance = require('../../../models/projects/acceptance.model');\n\nconst updateDynamicAcceptance = async (\n  _id,\n  signatory,\n  serviceValue,\n  recommendations\n) => {\n  //Obtener los datos del acta\n  try {\n    //Consultar registro\n    const data = await readAcceptanceById(_id);\n    console.log({ data });\n    //Ultimo estado reportado\n    const lastStage = await getLastStageName(data);\n    console.log({ lastStage });\n    //Evaluar los Stage y actualizar según el Stage\n    var updatedAcceptance;\n    switch (lastStage) {\n      case 'new':\n        const updateStepOne = {\n          $set: {\n            'signatory.contractor': signatory.contractor,\n          },\n          $push: {\n            stage: {\n              name: 'signedByContractor',\n              completed: true,\n            },\n          },\n        };\n        console.log({ updateStepOne });\n        updatedAcceptance = await setAcceptanceById(_id, updateStepOne);\n        console.log({ updatedAcceptance });\n        //Envía un correo al cliente con los datos para actualizar\n        break;\n      case 'signedByContractor':\n        const updateStepTwo = {\n          $set: {\n            'signatory.client': signatory.client,\n            'serviceValue': serviceValue,\n            'recommendations': recommendations,\n          },\n          $push: {\n            stage: {\n              name: 'signedByClient',\n              completed: true,\n            },\n          },\n        };\n\n        updatedAcceptance = await setAcceptanceById(_id, updateStepTwo);\n\n        //Recibe la firma por parte del cliente y cambia el estado a \"signClient\"\n        if (data.typeAcceptance === 'Parcial') {\n          //El estado se mantiene igual\n          //Se envía correo al gerente de proyecto del contractor para aceptación final.\n        } else {\n          //Se empuja el estado de cerrado.\n          const updateStepThree = {\n            $push: {\n              stage: {\n                name: 'closed',\n                completed: true,\n              },\n            },\n          };\n          updatedAcceptance = await setAcceptanceById(_id, updateStepThree);\n        }\n        break;\n      case 'signedByClient':\n        //Se debe enviar una aceptación de los pendientes\n        const updateStepThree = {\n          $push: {\n            stage: {\n              name: 'closed',\n              completed: true,\n            },\n          },\n        };\n\n        updatedAcceptance = await setAcceptanceById(_id, updateStepThree);\n\n        break;\n      default:\n        console.log('No se encontró ningún stage con ese nombre');\n        result = 'No se encontró ningún stage con ese nombre';\n    }\n    return updatedAcceptance;\n  } catch (err) {\n    return err;\n  }\n};\n\nconst setAcceptanceById = async (_id, update) => {\n  try {\n    console.log(`id para setAccep ${_id}`);\n    const updateAcceptance = await PjAcceptance.findByIdAndUpdate(_id, update, {\n      new: true,\n    });\n    if (updateAcceptance != null) {\n      return updateAcceptance;\n    } else {\n      throw boom.notFound(`Oops!, acta con _id:${_id}, no encontrada`);\n    }\n  } catch (err) {\n    return err;\n  }\n};\n\nconst readAcceptanceById = async (_id) => {\n  try {\n    const acceptance = await PjAcceptance.findById(_id);\n    if (acceptance != null) {\n      return acceptance;\n    } else {\n      throw boom.notFound(`Oops!, acta con _id:${_id}, no encontrada`);\n    }\n  } catch (err) {\n    return err;\n  }\n};\n\nconst findSomeStageComplete = async (data, someStageName) => {\n  // const data = await readAcceptanceById(_id);\n  const existingStageComplete = data.stage.some(\n    (stageSome) =>\n      stageSome.name === someStageName && stageSome.completed === true\n  );\n  console.log(`Se encontró el estado ${someStageName} completo en el array`);\n  const result = existingStageComplete === true ? someStageName : false;\n  return result;\n};\n\nconst updateSelectionStage = async (_id, stage) => {\n  //Obtener los datos de la base datos por medio del _id\n  const data = await readAcceptanceById(_id);\n  //Identifica si el registro cumple con el estado buscado\n  const confirmStage = await findSomeStageComplete(data, stage);\n  return confirmStage;\n};\n\nconst getLastStageName = async (data) => {\n  const stages = _.orderBy(data.stage, ['date'], ['desc']);\n  return stages.length > 0 ? stages[0].name : null;\n};\n\nconst data = {\n  _id: {\n    $oid: '643c3c15ae1896e1e634dbb7',\n  },\n  _codeProjectERP: 'PJ2203-0112',\n  _idProjectERP: 32,\n  dateAcceptance: {\n    $date: '2023-01-28T01:00:00Z',\n  },\n  serviceObject: 'Asistencia tecnica para la instalacion de 5 alarmas',\n  dateInit: {\n    $date: '2023-01-28T01:00:00Z',\n  },\n  dateEnd: {\n    $date: '2023-01-28T01:00:00Z',\n  },\n  erpRef: {\n    client: {\n      purchaseOrder: 'oc123456789',\n    },\n    own: {\n      proposal: 'OF12334567890',\n    },\n  },\n  client: {\n    company: 'ULTRACEM',\n    Name: 'Pedro Perez',\n    Position: 'Jefe de Compras',\n    Email: 'perdro.perez@prueba.com',\n  },\n  controller: {\n    Position: 'No especificado',\n  },\n  contractor: {\n    Name: 'Pedro Perez',\n    Position: 'Jefe de Compras',\n    Email: 'perdro.perez@prueba.com',\n  },\n  deliverables: [\n    {\n      _id: 'uuid',\n      description: 'Este es entregable 1',\n      compliance: 100,\n      accepted: true,\n    },\n    {\n      _id: 'uuid',\n      description: 'Este es entregable 2',\n      compliance: 100,\n      accepted: true,\n    },\n  ],\n  citySign: 'Barranquilla',\n  officeSign: 'el cliente',\n  serviceValue: 5,\n  recommendations: 'Estas son nuestras recomendaciones',\n  typeAcceptance: 'Total',\n  stage: [\n    {\n      name: 'new',\n      date: {\n        $date: '2023-04-16T18:19:01.177Z',\n      },\n      completed: false,\n      _id: {\n        $oid: '643c3c15ae1896e1e634dbb8',\n      },\n    },\n    {\n      name: 'rejected',\n      date: {\n        $date: '2023-04-16T18:19:01.177Z',\n      },\n      completed: true,\n      _id: {\n        $oid: '643c3c15ae1896e1e634dbb8',\n      },\n    },\n  ],\n  _idFiles: [],\n  dateSign: {\n    $date: '2023-04-16T18:19:01.186Z',\n  },\n  rejectedMessage: [],\n  createdAt: {\n    $date: '2023-04-16T18:19:01.191Z',\n  },\n  updatedAt: {\n    $date: '2023-04-16T18:19:01.191Z',\n  },\n};\n\nmodule.exports = {\n  updateDynamicAcceptance,\n  setAcceptanceById,\n  findSomeStageComplete,\n  getLastStageName,\n};\n"],"mappings":"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"}
=======
{"version":3,"file":"stages.js","names":["_","require","boom","PjAcceptance","updateDynamicAcceptance","_id","signatory","serviceValue","recommendations","readAcceptanceById","data","console","log","getLastStageName","lastStage","updateStepOne","$set","contractor","$push","stage","name","completed","setAcceptanceById","updatedAcceptance","updateStepTwo","client","typeAcceptance","updateStepThree","result","update","findByIdAndUpdate","updateAcceptance","notFound","findById","acceptance","findSomeStageComplete","someStageName","existingStageComplete","some","stageSome","updateSelectionStage","confirmStage","stages","orderBy","length","module","exports"],"sources":["../../../../src/helpers/validators/projects/stages.js"],"sourcesContent":["const _ = require('lodash');\nconst boom = require('@hapi/boom');\nconst PjAcceptance = require('../../../models/projects/acceptance.model');\n\n\nconst updateDynamicAcceptance = async(_id, signatory, serviceValue, recommendations) => {\n    //Obtener los datos del acta\n    try {\n        //Consultar registro\n        const data = await readAcceptanceById(_id);\n        console.log({ data });\n        //Ultimo estado reportado\n        const lastStage = await getLastStageName(data);\n        console.log({ lastStage });\n        //Evaluar los Stage y actualizar según el Stage\n        var updatedAcceptance;\n        switch (lastStage) {\n            case 'new':\n                const updateStepOne = {\n                    $set: {\n                        'signatory.contractor': signatory.contractor\n                    },\n                    $push: {\n                        stage: {\n                            name: 'signedByContractor',\n                            completed: true\n                        }\n                    }\n                }\n                console.log({ updateStepOne });\n                updatedAcceptance = await setAcceptanceById(_id, updateStepOne)\n                console.log({ updatedAcceptance });\n                //Envía un correo al cliente con los datos para actualizar\n                break;\n            case \"signedByContractor\":\n                const updateStepTwo = {\n                    $set: {\n                        'signatory.client': signatory.client,\n                        'serviceValue': serviceValue,\n                        'recommendations': recommendations\n                    },\n                    $push: {\n                        stage: {\n                            name: 'signedByClient',\n                            completed: true\n                        }\n                    }\n                }\n\n                updatedAcceptance = await setAcceptanceById(_id, updateStepTwo)\n\n                //Recibe la firma por parte del cliente y cambia el estado a \"signClient\"\n                if (data.typeAcceptance === 'Parcial') {\n                    //El estado se mantiene igual\n                    //Se envía correo al gerente de proyecto del contractor para aceptación final.\n                } else {\n                    //Se empuja el estado de cerrado.\n                    const updateStepThree = {\n                        $push: {\n                            stage: {\n                                name: 'closed',\n                                completed: true\n                            }\n                        }\n                    }\n                    updatedAcceptance = await setAcceptanceById(_id, updateStepThree)\n                }\n                break;\n            case \"signedByClient\":\n                //Se debe enviar una aceptación de los pendientes\n                const updateStepThree = {\n                    $push: {\n                        stage: {\n                            name: 'closed',\n                            completed: true\n                        }\n                    }\n                }\n\n                updatedAcceptance = await setAcceptanceById(_id, updateStepThree)\n\n                break;\n            default:\n                console.log(\"No se encontró ningún stage con ese nombre\");\n                result = \"No se encontró ningún stage con ese nombre\"\n        }\n        return updatedAcceptance;\n    } catch (err) {\n        return err\n    }\n}\n\nconst setAcceptanceById = async(_id, update) => {\n    try {\n        console.log(`id para setAccep ${_id}`);\n        const updateAcceptance = await PjAcceptance\n            .findByIdAndUpdate(_id, update, { new: true });\n        if (updateAcceptance != null) {\n            return updateAcceptance;\n        } else {\n            //TODO: Validar error boom en la funcnpm on setAcceptanceById del archivo stage\n            throw boom.notFound(`Oops!, acta con _id:${_id}, no encontrada`)\n        }\n    } catch (err) {\n        return err;\n    }\n}\n\n\nconst readAcceptanceById = async(_id) => {\n    try {\n        const acceptance = await PjAcceptance\n            .findById(_id);\n        if (acceptance != null) {\n            return acceptance;\n        } else {\n            throw boom.notFound(`Oops!, acta con _id:${_id}, no encontrada`)\n        }\n    } catch (err) {\n        return err;\n    }\n}\n\nconst findSomeStageComplete = async(data, someStageName) => {\n    // const data = await readAcceptanceById(_id);\n    const existingStageComplete = data.stage.some(stageSome => stageSome.name === someStageName && stageSome.completed === true)\n    console.log(`Se encontró el estado ${someStageName} completo en el array`);\n    const result = existingStageComplete === true ? someStageName : false;\n    return result;\n}\n\nconst updateSelectionStage = async(_id, stage) => {\n    //Obtener los datos de la base datos por medio del _id\n    const data = await readAcceptanceById(_id);\n    //Identifica si el registro cumple con el estado buscado\n    const confirmStage = await findSomeStageComplete(data, stage);\n    return confirmStage;\n}\n\nconst getLastStageName = async(data) => {\n    const stages = _.orderBy(data.stage, ['date'], ['desc']);\n    return stages.length > 0 ? stages[0].name : null;\n}\n\n\nconst data = {\n    \"_id\": {\n        \"$oid\": \"643c3c15ae1896e1e634dbb7\"\n    },\n    \"_codeProjectERP\": \"PJ2203-0112\",\n    \"_idProjectERP\": 32,\n    \"dateAcceptance\": {\n        \"$date\": \"2023-01-28T01:00:00Z\"\n    },\n    \"serviceObject\": \"Asistencia tecnica para la instalacion de 5 alarmas\",\n    \"dateInit\": {\n        \"$date\": \"2023-01-28T01:00:00Z\"\n    },\n    \"dateEnd\": {\n        \"$date\": \"2023-01-28T01:00:00Z\"\n    },\n    \"erpRef\": {\n        \"client\": {\n            \"purchaseOrder\": \"oc123456789\"\n        },\n        \"own\": {\n            \"proposal\": \"OF12334567890\"\n        }\n    },\n    \"client\": {\n        \"company\": \"ULTRACEM\",\n        \"Name\": \"Pedro Perez\",\n        \"Position\": \"Jefe de Compras\",\n        \"Email\": \"perdro.perez@prueba.com\"\n    },\n    \"controller\": {\n        \"Position\": \"No especificado\"\n    },\n    \"contractor\": {\n        \"Name\": \"Pedro Perez\",\n        \"Position\": \"Jefe de Compras\",\n        \"Email\": \"perdro.perez@prueba.com\"\n    },\n    \"deliverables\": [{\n            \"_id\": \"uuid\",\n            \"description\": \"Este es entregable 1\",\n            \"compliance\": 100,\n            \"accepted\": true\n        },\n        {\n            \"_id\": \"uuid\",\n            \"description\": \"Este es entregable 2\",\n            \"compliance\": 100,\n            \"accepted\": true\n        }\n    ],\n    \"citySign\": \"Barranquilla\",\n    \"officeSign\": \"el cliente\",\n    \"serviceValue\": 5,\n    \"recommendations\": \"Estas son nuestras recomendaciones\",\n    \"typeAcceptance\": \"Total\",\n    \"stage\": [{\n            \"name\": \"new\",\n            \"date\": {\n                \"$date\": \"2023-04-16T18:19:01.177Z\"\n            },\n            \"completed\": false,\n            \"_id\": {\n                \"$oid\": \"643c3c15ae1896e1e634dbb8\"\n            }\n        },\n        {\n            \"name\": \"rejected\",\n            \"date\": {\n                \"$date\": \"2023-04-16T18:19:01.177Z\"\n            },\n            \"completed\": true,\n            \"_id\": {\n                \"$oid\": \"643c3c15ae1896e1e634dbb8\"\n            }\n        }\n    ],\n    \"_idFiles\": [],\n    \"dateSign\": {\n        \"$date\": \"2023-04-16T18:19:01.186Z\"\n    },\n    \"rejectedMessage\": [],\n    \"createdAt\": {\n        \"$date\": \"2023-04-16T18:19:01.191Z\"\n    },\n    \"updatedAt\": {\n        \"$date\": \"2023-04-16T18:19:01.191Z\"\n    }\n}\n\n\nmodule.exports = { updateDynamicAcceptance, setAcceptanceById, findSomeStageComplete, getLastStageName }"],"mappings":"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"}
>>>>>>> develop
